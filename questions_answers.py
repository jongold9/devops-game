questions_answers = {
    # Git
    "Инициализация нового репозитория (Git).": "git init",
    "Клонирование существующего репозитория (Git).": "git clone",
    "Проверка состояния рабочего каталога и индекса (Git).": "git status",
    "Добавление изменений в индекс (staging area) (Git).": "git add",
    "Фиксация изменений в локальный репозиторий (Git).": "git commit",
    "Отправка изменений в удаленный репозиторий (Git).": "git push",
    "Получение изменений из удаленного репозитория и слияние с локальной веткой (Git).": "git pull",
    "Получение изменений из удаленного репозитория без слияния (Git).": "git fetch",
    "Слияние веток (Git).": "git merge",
    "Управление ветками (Git).": "git branch",
    "Переключение между ветками или восстановление файлов (Git).": "git checkout",
    "Просмотр истории коммитов (Git).": "git log",
    "Сравнение изменений между коммитами, ветками и файлами (Git).": "git diff",
    "Временное сохранение изменений без коммита (Git).": "git stash",
    "Откат изменений в рабочем каталоге и индексе (Git).": "git reset",
    "Создание нового коммита для отмены предыдущих изменений (Git).": "git revert",
    "Создание меток на коммитах (Git).": "git tag",
    "Управление удаленными репозиториями (Git).": "git remote",
    "Перенос серии коммитов на другую базу (Git).": "git rebase",
    "Применение изменений из одного коммита в другой ветке (Git).": "git cherry-pick",
    "Отображение различных типов объектов (Git).": "git show",
    "Показывает, кто последний изменил строки в файле (Git).": "git blame",
    "Поиск коммита, который вызвал баг, с помощью бинарного поиска (Git).": "git bisect",
    "Удаление файлов из рабочей директории и индекса (Git).": "git rm",
    "Перемещение или переименование файлов (Git).": "git mv",
    "Создание архива из репозитория (Git).": "git archive",
    "Удаление неотслеживаемых файлов из рабочей директории (Git).": "git clean",
    "Настройка параметров конфигурации (Git).": "git config",
    "Показ описания коммита на основе меток (Git).": "git describe",
    "Обобщение истории коммитов (Git).": "git shortlog",

    # Docker
    "Загрузка образа из Docker Hub или другого реестра (Docker).": "docker pull",
    "Отправка образа в Docker Hub или другой реестр (Docker).": "docker push",
    "Сборка образа из Dockerfile (Docker).": "docker build",
    "Запуск контейнера из образа (Docker).": "docker run",
    "Список запущенных контейнеров (Docker).": "docker ps",
    "Остановка работающего контейнера (Docker).": "docker stop",
    "Запуск остановленного контейнера (Docker).": "docker start",
    "Перезапуск контейнера (Docker).": "docker restart",
    "Удаление остановленного контейнера (Docker).": "docker rm",
    "Удаление образа (Docker).": "docker rmi",
    "Список локальных образов (Docker).": "docker images",
    "Выполнение команды в запущенном контейнере (Docker).": "docker exec",
    "Просмотр логов контейнера (Docker).": "docker logs",
    "Получение подробной информации о контейнере или образе (Docker).": "docker inspect",
    "Запуск всех сервисов, определенных в docker-compose.yml (Docker Compose).": "docker-compose up",
    "Остановка и удаление всех контейнеров, сетей и томов, определенных в docker-compose.yml (Docker Compose).": "docker-compose down",
    "Сборка или пересборка сервисов, определенных в docker-compose.yml (Docker Compose).": "docker-compose build",
    "Список контейнеров, управляемых Docker Compose (Docker Compose).": "docker-compose ps",
    "Просмотр логов всех сервисов, управляемых Docker Compose (Docker Compose).": "docker-compose logs",
    "Выполнение команды в запущенном контейнере, управляемом Docker Compose (Docker Compose).": "docker-compose exec",
    "Список всех томов Docker (Docker).": "docker volume ls",
    "Удаление тома Docker (Docker).": "docker volume rm",
    "Список всех сетей Docker (Docker).": "docker network ls",
    "Удаление сети Docker (Docker).": "docker network rm",
    "Присвоение тега образу Docker (Docker).": "docker tag",
    "Сохранение одного или нескольких образов в tar-архив (Docker).": "docker save",
    "Загрузка образа из tar-архива (Docker).": "docker load",
    "Удаление всех неиспользуемых данных (контейнеры, образы, сети, тома) (Docker).": "docker system prune",
    "Просмотр истории слоев образа (Docker).": "docker history",
    "Получение информации о системе Docker (Docker).": "docker info",

    # Terraform
    "Инициализация Terraform рабочей директории (Terraform).": "terraform init",
    "Создание плана изменений инфраструктуры (Terraform).": "terraform plan",
    "Применение изменений к инфраструктуре (Terraform).": "terraform apply",
    "Удаление всех управляемых Terraform ресурсов (Terraform).": "terraform destroy",
    "Валидация конфигурационных файлов Terraform (Terraform).": "terraform validate",
    "Форматирование конфигурационных файлов Terraform (Terraform).": "terraform fmt",
    "Пометка ресурса для пересоздания при следующем apply (Terraform).": "terraform taint",
    "Снятие метки taint с ресурса (Terraform).": "terraform untaint",
    "Обновление состояния ресурсов в Terraform (Terraform).": "terraform refresh",
    "Отображение содержимого состояния или плана (Terraform).": "terraform show",
    "Вывод значений из состояния Terraform (Terraform).": "terraform output",
    "Список всех ресурсов в состоянии (Terraform).": "terraform state list",
    "Показ информации о ресурсе в состоянии (Terraform).": "terraform state show",
    "Удаление ресурса из состояния (Terraform).": "terraform state rm",
    "Импорт существующего ресурса в состояние Terraform (Terraform).": "terraform import",
    "Список всех рабочих пространств (Terraform).": "terraform workspace list",
    "Создание нового рабочего пространства (Terraform).": "terraform workspace new",
    "Переключение между рабочими пространствами (Terraform).": "terraform workspace select",
    "Создание графа ресурсов в формате DOT (Terraform).": "terraform graph",
    "Список всех используемых провайдеров (Terraform).": "terraform providers",

    # Ansible
    "Запуск всех сервисов (Ansible).": "ansible-playbook",
    "Шифрование данных (Ansible).": "ansible-vault",
    "Управление ролями (Ansible).": "ansible-galaxy",
    "Просмотр документации (Ansible).": "ansible-doc",
    "Настройка конфигурации (Ansible).": "ansible-config",
    "Выполнение команд на хостах (Ansible).": "ansible",

    # Kubernetes
    "Получение списка подов (Kubernetes).": "kubectl get pods",
    "Получение списка сервисов (Kubernetes).": "kubectl get services",
    "Получение списка нодов (Kubernetes).": "kubectl get nodes",
    "Просмотр логов пода (Kubernetes).": "kubectl logs",
    "Выполнение команды в контейнере пода (Kubernetes).": "kubectl exec",
    "Применение конфигурации из файла или директории (Kubernetes).": "kubectl apply",
    "Удаление ресурса (Kubernetes).": "kubectl delete",
    "Создание ресурса из файла или stdin (Kubernetes).": "kubectl create",
    "Масштабирование деплоймента (Kubernetes).": "kubectl scale",
    "Просмотр состояния раскатки деплоймента (Kubernetes).": "kubectl rollout status",
    "Редактирование конфигурации ресурса (Kubernetes).": "kubectl edit",
    "Добавление меток к ресурсам (Kubernetes).": "kubectl label",
    "Добавление аннотаций к ресурсам (Kubernetes).": "kubectl annotate",

    # Bash
    "Вывод списка файлов и директорий (Bash).": "ls",
    "Изменение текущей директории (Bash).": "cd",
    "Копирование файлов и директорий (Bash).": "cp",
    "Перемещение или переименование файлов и директорий (Bash).": "mv",
    "Удаление файлов или директорий (Bash).": "rm",
    "Создание новой директории (Bash).": "mkdir",
    "Удаление пустой директории (Bash).": "rmdir",
    "Создание пустого файла или обновление времени доступа (Bash).": "touch",
    "Вывод содержимого файла (Bash).": "cat",
    "Постраничный просмотр содержимого файла (Bash).": "less",
    "Постраничный просмотр содержимого файла (Bash).": "more",
    "Поиск строки в файле (Bash).": "grep",
    "Поиск файлов и директорий (Bash).": "find",
    "Обработка и преобразование текста (Bash).": "awk",
    "Редактирование текста (Bash).": "sed",
    "Изменение прав доступа к файлам и директориям (Bash).": "chmod",
    "Изменение владельца и группы файлов и директорий (Bash).": "chown",
    "Просмотр списка процессов (Bash).": "ps",
    "Завершение процесса (Bash).": "kill",
    "Вывод информации о файловой системе (Bash).": "df",
    "Вывод информации о размере файлов и директорий (Bash).": "du",
    "Архивирование файлов (Bash).": "tar",
    "Сжатие файлов (Bash).": "zip",
    "Распаковка файлов (Bash).": "unzip",
    "Отправка HTTP-запросов (Bash).": "curl",
    "Вывод пути к текущему рабочему каталогу (Bash).": "pwd",
    "Переход в домашний каталог пользователя (Bash).": "cd ~",
    "Переход на один уровень вверх по каталогу (Bash).": "cd ..",
    "Сравнение содержимого двух файлов (Bash).": "diff file1 file2",
    "Вывод последних строк файла (Bash).": "tail -n 10 filename",
    "Вывод первых строк файла (Bash).": "head -n 10 filename",
    "Подсчет количества строк, слов и символов в файле (Bash).": "wc filename",
    "Создание архива tar.gz (Bash).": "tar -czvf archive.tar.gz directory/",
    "Распаковка архива tar.gz (Bash).": "tar -xzvf archive.tar.gz",
    "Отображение использования памяти (Bash).": "free -h",

    # Python
    "Создание функции в Python.": "def function_name():",
    "Импортирование модуля в Python.": "import module_name",
    "Установка пакета с помощью pip.": "pip install package_name",
    "Создание списка в Python.": "my_list = []",
    "Создание словаря в Python.": "my_dict = {}",
    "Открытие файла для чтения в Python.": "open('filename', 'r')",
    "Открытие файла для записи в Python.": "open('filename', 'w')",
    "Вывод на экран в Python.": "print('Hello, world!')",
    "Чтение строки из стандартного ввода в Python.": "input()",
    "Проверка типа переменной в Python.": "type(variable)",
    "Конвертация строки в целое число в Python.": "int('123')",
    "Конвертация строки в число с плавающей точкой в Python.": "float('123.45')",
    "Обработка исключений в Python.": "try: ... except:",
    "Получение длины списка в Python.": "len(my_list)",
    "Итерация по списку в Python.": "for item in my_list:",
    "Итерация по словарю в Python.": "for key, value in my_dict.items():",
    "Создание класса в Python.": "class ClassName:",
    "Наследование в Python.": "class DerivedClass(BaseClass):",
    "Проверка условия в Python.": "if condition:",
    "Использование лямбда-функции в Python.": "lambda x: x * 2",
    "Генератор списка в Python.": "[x for x in range(10)]",
    "Условная генерация списка в Python.": "[x for x in range(10) if x % 2 == 0]",
    "Создание кортежа в Python.": "my_tuple = (1, 2, 3)",
    "Сортировка списка в Python.": "sorted(my_list)",
    "Создание множества в Python.": "my_set = set()",
    "Проверка наличия элемента в множестве в Python.": "if element in my_set:",
    "Объединение строк в Python.": "' '.join(['Hello', 'world'])",
    "Разделение строки в Python.": "'Hello world'.split()",
    "Форматирование строки в Python.": "'Hello, {}'.format(name)",

}
